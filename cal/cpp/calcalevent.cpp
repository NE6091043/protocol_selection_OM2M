#include <bits/stdc++.h>
using namespace std;

// for event
// if not sucess efficiency = 0
// 0 coap
// 1 mqtt
// 2 xmpp
// 3 ws
// {protocol,size,packet loss rate} => average throughput
// efficiency == size(key[1])/average throughtput

int main() {
  // protocol,size,loss rate
  map<array<int, 3>, double> m;

  m[{0, 100, 0}] = 1538 / 2018.07;
  m[{0, 500, 0}] = 2242 / 3078.85;
  m[{0, 1000, 0}] = 3138 / 4316.51;
  m[{0, 1500, 0}] = 4022 / 5387.06;

  m[{0, 100, 10}] = 1538 / 2320.52;
  m[{0, 500, 10}] = 2242 / 3341.35;
  m[{0, 1000, 10}] = 3138 / 4557.52;
  m[{0, 1500, 10}] = 4022 / 5568.18;

  m[{0, 100, 20}] = 1538 / 2559.24;
  m[{0, 500, 20}] = 2242 / 3547.67;
  m[{0, 1000, 20}] = 3138 / 4777.41;
  m[{0, 1500, 20}] = 4022 / 5530.08;

  m[{0, 100, 30}] = 0.357535854;
  m[{0, 500, 30}] = 0.123957231;
  m[{0, 1000, 30}] = 0.044991432;
  m[{0, 1500, 30}] = 0.04879541;

  // mqtt
  m[{1, 100, 0}] = 1538 / 1835.40;
  m[{1, 500, 0}] = 2242 / 2530.89;
  m[{1, 1000, 0}] = 3138 / 3466.02;
  m[{1, 1500, 0}] = 4042 / 4346.95;

  m[{1, 100, 10}] = 1538 / 2077.424;
  m[{1, 500, 10}] = 2242 / 2901.35;
  m[{1, 1000, 10}] = 3138 / 3917.78;
  m[{1, 1500, 10}] = 4042 / 5001.98;

  m[{1, 100, 20}] = 1538 / 2418.81;
  m[{1, 500, 20}] = 2242 / 3203.62;
  m[{1, 1000, 20}] = 3138 / 4512.76;
  m[{1, 1500, 20}] = 4042 / 5960.53;

  m[{1, 100, 30}] = 0.043208467;
  m[{1, 500, 30}] = 0.678152483;
  m[{1, 1000, 30}] = 0.763633103;
  m[{1, 1500, 30}] = 0.696588472;

  // xmpp
  m[{2, 100, 0}] = 1538 / 1913.68;
  m[{2, 500, 0}] = 2242 / 2615;
  m[{2, 1000, 0}] = 3138 / 3581;
  m[{2, 1500, 0}] = 4022 / 4473.27;

  m[{2, 100, 10}] = 1538 / 2401.24;
  m[{2, 500, 10}] = 2242 / 3139.6;
  m[{2, 1000, 10}] = 3138 / 4093.73;
  m[{2, 1500, 10}] = 4022 / 5117.44;

  m[{2, 100, 20}] = 1538 / 2666.36;
  m[{2, 500, 20}] = 2242 / 2283.93;
  m[{2, 1000, 20}] = 3138 / 4585.19;
  m[{2, 1500, 20}] = 4042 / 5155.77;

  m[{2, 100, 30}] = 0.633425418;
  m[{2, 500, 30}] = 0.258652528;
  m[{2, 1000, 30}] = 0.453223992;
  m[{2, 1500, 30}] = 0.562889544;

  // ws
  m[{3, 100, 0}] = 1538 / 1741.06;
  m[{3, 500, 0}] = 2242 / 2435.72;
  m[{3, 1000, 0}] = 3138 / 3455.06;
  m[{3, 1500, 0}] = 4042 / 4348.71;

  m[{3, 100, 10}] = 1538 / 2093.84;
  m[{3, 500, 10}] = 2242 / 3053.23;
  m[{3, 1000, 10}] = 3138 / 4220.43;
  m[{3, 1500, 10}] = 4022 / 5106.68;

  m[{3, 100, 20}] = 1538 / 2363.13;
  m[{3, 500, 20}] = 2242 / 3280.1;
  m[{3, 1000, 20}] = 3138 / 4216.94;
  m[{3, 1500, 20}] = 4022 / 5850.35;

  m[{3, 100, 30}] = 0.749611044;
  m[{3, 500, 30}] = 0.732597068;
  m[{3, 1000, 30}] = 0.071663547;
  m[{3, 1500, 30}] = 0.299125258;

  int x = 15;
  int n = x;

  double total = 0;

  vector<int> res;

  string line;

  // Open file
  ifstream myFile;
  myFile.open(
      "D:\\Users\\USER\\Documents\\GitHub\\Project_code\\python\\result.txt");

  // Print file content
  while (getline(myFile, line)) {
    res.push_back(stoi(line));
  }

  // Close file
  myFile.close();

  // {protocol,size,packet loss rate}

  while (x > 0) {
    for (int i = 0; i < 50; ++i) {
      int idx = i + (n - x) * 50;
      if (i < 11) {
        total += m[{res[idx], 100, 0}];
      } else if (i < 26) {
        total += m[{res[idx], 500, 30}];
      } else if (i < 36) {
        total += m[{res[idx], 1500, 10}];
      } else {
        total += m[{res[idx], 500, 30}];
      }
    }
    cout << total / 100 << "----------"
         << "\n";
    total = 0;
    --x;
  }
  return 0;
}

// std::ifstream ifs("D:\\Users\\USER\\Desktop\\cal\\aaa.txt", std::ios::in);